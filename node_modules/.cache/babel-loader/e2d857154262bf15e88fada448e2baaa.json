{"ast":null,"code":"import _slicedToArray from \"/home/haiduong/B\\u1EA3n t\\u1EA3i v\\u1EC1/LipToken_NFT_game-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/haiduong/B\\u1EA3n t\\u1EA3i v\\u1EC1/LipToken_NFT_game-master/src/components/EnemyLip.js\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { handleFetchDataEnemy } from '../redux/data/dataActions';\nimport * as s from '../styled/globalStyles';\nimport LipLayout from './LipLayout';\n\nfunction EnemyLip() {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var blockchain = useSelector(function (state) {\n    return state.blockchain;\n  });\n  var data = useSelector(function (state) {\n    return state.data;\n  });\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loading = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectLip = _React$useState4[0],\n      setSelectLip = _React$useState4[1];\n\n  React.useEffect(function () {\n    if (blockchain.account && blockchain.lipToken) {\n      dispatch(handleFetchDataEnemy(blockchain.lipToken, blockchain.account));\n    }\n\n    setLoading(false);\n  }, [dispatch, blockchain.account, blockchain.lipToken]);\n\n  function handleAttack(enemyId) {\n    if (selectLip === null || selectLip === undefined) {\n      alert(\"Please select lip you want to fight!\");\n      return;\n    }\n\n    setLoading(true);\n    blockchain.lipToken.methods.attack(parseInt(selectLip), enemyId).send({\n      from: blockchain.account\n    }, function (err, val) {\n      if (!err) {\n        if (val) val = parseInt(val.toString());\n        if (val === -1) alert(\"You lose\");else alert(\"You won\");\n        dispatch(handleFetchDataEnemy(blockchain.lipToken, blockchain.account));\n      } else {\n        var errMsg = err.code === -32603 ? \"Error when send message to server\" : err.data.message.replace(\"VM Exception while processing transaction: revert\", \"\");\n        alert(errMsg);\n      }\n\n      setLoading(false);\n    });\n  }\n\n  if (!blockchain.account) return /*#__PURE__*/React.createElement(React.Fragment, null);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(s.SpacerXSmall, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    className: \"col-lg-12 d-flex text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content mr-auto ml-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(s.SpacerSmall, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(s.Container, {\n    fd: \"row\",\n    style: {\n      flexWrap: 'wrap',\n      gap: '3em'\n    },\n    jc: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, data.enemyLips && data.enemyLips.map(function (item) {\n    return /*#__PURE__*/React.createElement(LipLayout, {\n      loading: loading,\n      item: item,\n      key: Math.random(),\n      viewOnly: true,\n      userLips: data.allOwnerLips,\n      handleAttack: handleAttack,\n      setSelectLip: setSelectLip,\n      selectLip: selectLip,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 23\n      }\n    });\n  })))))));\n}\n\nexport default EnemyLip;","map":{"version":3,"sources":["/home/haiduong/Bản tải về/LipToken_NFT_game-master/src/components/EnemyLip.js"],"names":["React","useDispatch","useSelector","handleFetchDataEnemy","s","LipLayout","EnemyLip","dispatch","blockchain","state","data","useState","loading","setLoading","selectLip","setSelectLip","useEffect","account","lipToken","handleAttack","enemyId","undefined","alert","methods","attack","parseInt","send","from","err","val","toString","errMsg","code","message","replace","flexWrap","gap","enemyLips","map","item","Math","random","allOwnerLips"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { handleFetchDataEnemy } from '../redux/data/dataActions'\nimport * as s from '../styled/globalStyles'\nimport LipLayout from './LipLayout';\n\nfunction EnemyLip() {\n  const dispatch = useDispatch()\n  const blockchain = useSelector(state => state.blockchain)\n  const data = useSelector(state => state.data)\n  const [loading, setLoading] = React.useState(true)\n  const [selectLip, setSelectLip] = React.useState(null)\n  React.useEffect(() => {\n    if (blockchain.account && blockchain.lipToken) {\n      dispatch(handleFetchDataEnemy(blockchain.lipToken, blockchain.account))\n    }\n    setLoading(false)\n  }, [dispatch, blockchain.account, blockchain.lipToken]);\n  \n  function handleAttack(enemyId) {\n    if (selectLip === null || selectLip === undefined) {\n      alert(\"Please select lip you want to fight!\")\n      return\n    }\n    setLoading(true);\n    blockchain.lipToken.methods\n      .attack(parseInt(selectLip), enemyId)\n      .send({\n        from: blockchain.account\n      }, (err, val) => {\n        if (!err) {\n          if (val) val = parseInt(val.toString()) \n          if (val === -1) alert(\"You lose\")\n          else alert(\"You won\")\n          dispatch(handleFetchDataEnemy(blockchain.lipToken, blockchain.account));\n        } else {\n          let errMsg = err.code === -32603  ?\n          \"Error when send message to server\" :\n          err.data.message.replace(\"VM Exception while processing transaction: revert\", \"\")\n\n          alert(errMsg)\n        }\n        setLoading(false);\n      })\n  }\n\n  if (!blockchain.account) return <></>\n\n  return (\n    <>\n      <div className=\"container-fluid mt-5\">\n        <s.SpacerXSmall />\n        <div className=\"row\">\n          <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n            <div className=\"content mr-auto ml-auto\">\n              <s.SpacerSmall />\n              <s.Container fd={\"row\"} style={{ flexWrap: 'wrap', gap: '3em' }} jc={\"center\"}>\n                {\n                  data.enemyLips && data.enemyLips.map(item => {\n                    return (\n                      <LipLayout\n                        loading={loading}\n                        item={item}\n                        key={Math.random()}\n                        viewOnly\n                        userLips={data.allOwnerLips}\n                        handleAttack={handleAttack}\n                        setSelectLip={setSelectLip}\n                        selectLip={selectLip}\n                      />\n                    )\n                  })\n                }\n              </s.Container>\n            </div>\n\n          </main>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default EnemyLip;\n"]},"metadata":{},"sourceType":"module"}