{"ast":null,"code":"import _slicedToArray from \"/home/haiduong/B\\u1EA3n t\\u1EA3i v\\u1EC1/LipToken_NFT_game-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/haiduong/B\\u1EA3n t\\u1EA3i v\\u1EC1/LipToken_NFT_game-master/src/components/Transfer.js\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { handleFetchData } from '../redux/data/dataActions';\nimport * as s from '../styled/globalStyles';\nexport default function Transfer() {\n  var _this = this;\n\n  var blockchain = useSelector(function (state) {\n    return state.blockchain;\n  });\n  var data = useSelector(function (state) {\n    return state.data;\n  });\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loading = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  var dispatch = useDispatch();\n  React.useEffect(function () {\n    if (blockchain.account && blockchain.lipToken) {\n      dispatch(handleFetchData(blockchain.lipToken, blockchain.account));\n    }\n  }, [dispatch, blockchain.account, blockchain.lipToken]);\n\n  function handleTransferLip(e) {\n    e.preventDefault();\n    setLoading(true);\n    blockchain.lipToken.methods.transferFrom(blockchain.account, e.target.to.value, parseInt(e.target.from.value)).send({\n      from: blockchain.account\n    }, function (err) {\n      if (!err) {\n        alert(\"Transfer successfully!\");\n        dispatch(handleFetchData(blockchain.lipToken, blockchain.account));\n      } else {\n        alert(\"Error when sending message!\");\n      }\n\n      setLoading(false);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(s.Container, {\n    js: \"center\",\n    ai: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(s.SpacerMedium, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"transfer_container\",\n    onSubmit: handleTransferLip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(s.TextSubTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"from\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 27\n    }\n  }, \"Select your lip: \")), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"from\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Select your lip\"), data.allOwnerLips && data.allOwnerLips.length > 0 && data.allOwnerLips.map(function (item) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: item.id.toString(),\n      key: Math.random(),\n      dangerouslySetInnerHTML: {\n        __html: \"ID: \".concat(item.id.toString(), \"    NAME: \").concat(item.name, \"    RARITY: \").concat(item.rarity)\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(s.TextSubTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"to\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 27\n    }\n  }, \"To: \")), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"to\",\n    required: true,\n    placeholder: \"Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    disabled: loading,\n    type: \"submit\",\n    className: \"submit_btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/haiduong/Bản tải về/LipToken_NFT_game-master/src/components/Transfer.js"],"names":["React","useDispatch","useSelector","handleFetchData","s","Transfer","blockchain","state","data","useState","loading","setLoading","dispatch","useEffect","account","lipToken","handleTransferLip","e","preventDefault","methods","transferFrom","target","to","value","parseInt","from","send","err","alert","allOwnerLips","length","map","item","id","toString","Math","random","__html","name","rarity"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { handleFetchData } from '../redux/data/dataActions'\nimport * as s from '../styled/globalStyles'\n\nexport default function Transfer() {\n  const blockchain = useSelector(state => state.blockchain)\n  const data = useSelector(state => state.data)\n  const [loading, setLoading] = React.useState(false)\n  const dispatch = useDispatch()\n  \n  React.useEffect(() => {\n    if (blockchain.account && blockchain.lipToken) {\n      dispatch(handleFetchData(blockchain.lipToken, blockchain.account))\n    }\n  }, [dispatch, blockchain.account, blockchain.lipToken]);\n\n  function handleTransferLip(e) {\n    e.preventDefault()\n    setLoading(true)\n    blockchain.lipToken.methods\n      .transferFrom(blockchain.account, e.target.to.value, parseInt(e.target.from.value))\n      .send({\n        from: blockchain.account\n      }, (err) => {\n        if (!err) {\n          alert(\"Transfer successfully!\")\n          dispatch(handleFetchData(blockchain.lipToken, blockchain.account));\n        } else {\n          alert(\"Error when sending message!\")\n        }\n        setLoading(false)\n      })\n  }\n  return (\n    <s.Container js=\"center\" ai=\"center\" >\n      <s.SpacerMedium/>\n      <form\n        className='transfer_container'\n        onSubmit={handleTransferLip}\n      >\n        <div className='input_container'>\n          <s.TextSubTitle><label htmlFor='from'>Select your lip: </label></s.TextSubTitle>        \n          <select id=\"from\" required>\n            <option value={\"\"}>Select your lip</option>\n            {data.allOwnerLips && data.allOwnerLips.length > 0 && data.allOwnerLips.map(item => {\n              return (\n                <option\n                  value={item.id.toString()}\n                  key={Math.random()}\n                  dangerouslySetInnerHTML={{\n                    __html: `ID: ${item.id.toString()}    NAME: ${item.name}    RARITY: ${item.rarity}`\n                  }}\n                />\n              )\n            })}\n          </select>\n        </div>\n\n        <div className='input_container'>\n          <s.TextSubTitle><label htmlFor='to'>To: </label></s.TextSubTitle>\n          <input id=\"to\" required placeholder='Address'/>\n        </div>\n        <input disabled={loading} type=\"submit\" className='submit_btn'/>\n      </form>\n    </s.Container>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}