{"ast":null,"code":"import _slicedToArray from \"/home/haiduong/B\\u1EA3n t\\u1EA3i v\\u1EC1/LipToken_NFT_game-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/haiduong/B\\u1EA3n t\\u1EA3i v\\u1EC1/LipToken_NFT_game-master/src/components/WorldLip.js\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { handleFetchDataWorldLip } from '../redux/data/dataActions';\nimport * as s from '../styled/globalStyles';\nimport LipLayout from './LipLayout';\n\nfunction WorldLip() {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var blockchain = useSelector(function (state) {\n    return state.blockchain;\n  });\n  var data = useSelector(function (state) {\n    return state.data;\n  });\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loading = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (blockchain.account && blockchain.lipToken) {\n      dispatch(handleFetchDataWorldLip(blockchain.lipToken));\n    }\n\n    setLoading(false);\n  }, [dispatch, blockchain.account, blockchain.lipToken]);\n  if (!blockchain.account) return /*#__PURE__*/React.createElement(React.Fragment, null);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(s.SpacerXSmall, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    className: \"col-lg-12 d-flex text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content mr-auto ml-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(s.SpacerSmall, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(s.Container, {\n    fd: \"row\",\n    style: {\n      flexWrap: 'wrap',\n      gap: '3em'\n    },\n    jc: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }, data.worldLips && data.worldLips.map(function (item) {\n    return /*#__PURE__*/React.createElement(LipLayout, {\n      loading: loading,\n      item: item,\n      key: Math.random(),\n      viewOnly: true,\n      noAttack: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 23\n      }\n    });\n  })))))));\n}\n\nexport default WorldLip;","map":{"version":3,"sources":["/home/haiduong/Bản tải về/LipToken_NFT_game-master/src/components/WorldLip.js"],"names":["React","useDispatch","useSelector","handleFetchDataWorldLip","s","LipLayout","WorldLip","dispatch","blockchain","state","data","useState","loading","setLoading","useEffect","account","lipToken","flexWrap","gap","worldLips","map","item","Math","random"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAUC,uBAAV,QAAyC,2BAAzC;AACA,OAAO,KAAKC,CAAZ,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,MAAMO,UAAU,GAAGN,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACD,UAAV;AAAA,GAAN,CAA9B;AACA,MAAME,IAAI,GAAGR,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAAxB;;AAHkB,wBAIYV,KAAK,CAACW,QAAN,CAAe,IAAf,CAJZ;AAAA;AAAA,MAIXC,OAJW;AAAA,MAIFC,UAJE;;AAKlBb,EAAAA,KAAK,CAACc,SAAN,CAAgB,YAAM;AACpB,QAAIN,UAAU,CAACO,OAAX,IAAsBP,UAAU,CAACQ,QAArC,EAA+C;AAC7CT,MAAAA,QAAQ,CAACJ,uBAAuB,CAACK,UAAU,CAACQ,QAAZ,CAAxB,CAAR;AACD;;AACDH,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GALD,EAKG,CAACN,QAAD,EAAWC,UAAU,CAACO,OAAtB,EAA+BP,UAAU,CAACQ,QAA1C,CALH;AAMA,MAAI,CAACR,UAAU,CAACO,OAAhB,EAAyB,oBAAO,yCAAP;AAEzB,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,CAAD,CAAG,YAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,SAAS,EAAC,8BAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,CAAD,CAAG,WAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,CAAD,CAAG,SAAH;AAAa,IAAA,EAAE,EAAE,KAAjB;AAAwB,IAAA,KAAK,EAAE;AAAEE,MAAAA,QAAQ,EAAE,MAAZ;AAAoBC,MAAAA,GAAG,EAAE;AAAzB,KAA/B;AAAiE,IAAA,EAAE,EAAE,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIR,IAAI,CAACS,SAAL,IAAkBT,IAAI,CAACS,SAAL,CAAeC,GAAf,CAAmB,UAAAC,IAAI,EAAI;AAC3C,wBACE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAET,OADX;AAEE,MAAA,IAAI,EAAES,IAFR;AAGE,MAAA,GAAG,EAAEC,IAAI,CAACC,MAAL,EAHP;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAViB,CAFtB,CAFF,CADF,CADF,CAFF,CADF,CADF;AA8BD;;AAED,eAAejB,QAAf","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {  handleFetchDataWorldLip } from '../redux/data/dataActions'\nimport * as s from '../styled/globalStyles'\nimport LipLayout from './LipLayout';\n\nfunction WorldLip() {\n  const dispatch = useDispatch()\n  const blockchain = useSelector(state => state.blockchain)\n  const data = useSelector(state => state.data)\n  const [loading, setLoading] = React.useState(true)\n  React.useEffect(() => {\n    if (blockchain.account && blockchain.lipToken) {\n      dispatch(handleFetchDataWorldLip(blockchain.lipToken))\n    }\n    setLoading(false)\n  }, [dispatch, blockchain.account, blockchain.lipToken]);\n  if (!blockchain.account) return <></>\n\n  return (\n    <>\n      <div className=\"container-fluid mt-5\">\n        <s.SpacerXSmall />\n        <div className=\"row\">\n          <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n            <div className=\"content mr-auto ml-auto\">\n              <s.SpacerSmall />\n              <s.Container fd={\"row\"} style={{ flexWrap: 'wrap', gap: '3em' }} jc={\"center\"}>\n                {\n                  data.worldLips && data.worldLips.map(item => {\n                    return (\n                      <LipLayout\n                        loading={loading}\n                        item={item}\n                        key={Math.random()}\n                        viewOnly\n                        noAttack\n                      />\n                    )\n                  })\n                }\n              </s.Container>\n            </div>\n\n          </main>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default WorldLip;\n"]},"metadata":{},"sourceType":"module"}