{"ast":null,"code":"import _objectSpread from \"/home/haiduong/B\\u1EA3n t\\u1EA3i v\\u1EC1/LipToken_NFT_game-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { actionTypes } from './blockchainActions';\nvar initialState = {\n  loading: false,\n  account: null,\n  lipToken: null,\n  web3: null,\n  errMesg: \"\"\n};\n\nvar blockchainReducer = function blockchainReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.CONNECTION_REQUEST:\n      return _objectSpread({}, initialState, {\n        loading: true\n      });\n\n    case actionTypes.CONNECTION_SUCCESS:\n      return _objectSpread({}, initialState, {\n        account: action.payload.account,\n        loading: false,\n        lipToken: action.payload.lipToken,\n        web3: action.payload.web3\n      });\n\n    case actionTypes.CONNECTION_FAILED:\n      return _objectSpread({}, initialState, {\n        loading: false,\n        errMesg: action.payload\n      });\n\n    case actionTypes.UPDATE_ACCOUNT:\n      return _objectSpread({}, state, {\n        account: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;","map":{"version":3,"sources":["/home/haiduong/Bản tải về/LipToken_NFT_game-master/src/redux/blockchain/blockchainReducer.js"],"names":["actionTypes","initialState","loading","account","lipToken","web3","errMesg","blockchainReducer","state","action","type","CONNECTION_REQUEST","CONNECTION_SUCCESS","payload","CONNECTION_FAILED","UPDATE_ACCOUNT"],"mappings":";AAAA,SAASA,WAAT,QAA4B,qBAA5B;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,QAAQ,EAAE,IAHS;AAInBC,EAAAA,IAAI,EAAE,IAJa;AAKnBC,EAAAA,OAAO,EAAE;AALU,CAArB;;AAQA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,WAAW,CAACW,kBAAjB;AACE,+BACKV,YADL;AAEEC,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKF,WAAW,CAACY,kBAAjB;AACE,+BACKX,YADL;AAEEE,QAAAA,OAAO,EAAEM,MAAM,CAACI,OAAP,CAAeV,OAF1B;AAGED,QAAAA,OAAO,EAAE,KAHX;AAIEE,QAAAA,QAAQ,EAAEK,MAAM,CAACI,OAAP,CAAeT,QAJ3B;AAKEC,QAAAA,IAAI,EAAEI,MAAM,CAACI,OAAP,CAAeR;AALvB;;AAOF,SAAKL,WAAW,CAACc,iBAAjB;AACE,+BACKb,YADL;AAEEC,QAAAA,OAAO,EAAE,KAFX;AAGEI,QAAAA,OAAO,EAAEG,MAAM,CAACI;AAHlB;;AAKF,SAAKb,WAAW,CAACe,cAAjB;AACE,+BACKP,KADL;AAEEL,QAAAA,OAAO,EAAEM,MAAM,CAACI;AAFlB;;AAIF;AACE,aAAOL,KAAP;AA1BJ;AA4BD,CA7BD;;AA+BA,eAAeD,iBAAf","sourcesContent":["import { actionTypes } from './blockchainActions'\nconst initialState = {\n  loading: false,\n  account: null,\n  lipToken: null,\n  web3: null,\n  errMesg: \"\"\n}\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.CONNECTION_REQUEST:\n      return {\n        ...initialState,\n        loading: true\n      }\n    case actionTypes.CONNECTION_SUCCESS:\n      return {\n        ...initialState,\n        account: action.payload.account,\n        loading: false,\n        lipToken: action.payload.lipToken,\n        web3: action.payload.web3\n      }\n    case actionTypes.CONNECTION_FAILED:\n      return {\n        ...initialState,\n        loading: false,\n        errMesg: action.payload\n      }\n    case actionTypes.UPDATE_ACCOUNT:\n      return {\n        ...state,\n        account: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport default blockchainReducer"]},"metadata":{},"sourceType":"module"}