{"ast":null,"code":"import _objectSpread from \"/home/haiduong/B\\u1EA3n t\\u1EA3i v\\u1EC1/LipToken_NFT_game-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { actionTypes } from './dataActions';\nvar initialState = {\n  loading: false,\n  enemyLips: [],\n  worldLips: [],\n  allOwnerLips: [],\n  error: false,\n  errorMsg: \"\"\n};\n\nvar dataReducer = function dataReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.CHECK_DATA_REQUEST:\n      return _objectSpread({}, initialState, {\n        loading: true\n      });\n\n    case actionTypes.CHECK_DATA_SUCCESS:\n      return _objectSpread({}, initialState, action.payload, {\n        loading: false\n      });\n\n    case actionTypes.CHECK_DATA_FAILED:\n      return _objectSpread({}, initialState, {\n        loading: false,\n        error: true,\n        errorMsg: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;","map":{"version":3,"sources":["/home/haiduong/Bản tải về/LipToken_NFT_game-master/src/redux/data/dataReducer.js"],"names":["actionTypes","initialState","loading","enemyLips","worldLips","allOwnerLips","error","errorMsg","dataReducer","state","action","type","CHECK_DATA_REQUEST","CHECK_DATA_SUCCESS","payload","CHECK_DATA_FAILED"],"mappings":";AAAA,SAASA,WAAT,QAA4B,eAA5B;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,SAAS,EAAE,EAFQ;AAGnBC,EAAAA,SAAS,EAAE,EAHQ;AAInBC,EAAAA,YAAY,EAAE,EAJK;AAKnBC,EAAAA,KAAK,EAAE,KALY;AAMnBC,EAAAA,QAAQ,EAAE;AANS,CAArB;;AASA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,WAAW,CAACY,kBAAjB;AACE,+BACKX,YADL;AAEEC,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKF,WAAW,CAACa,kBAAjB;AACE,+BACKZ,YADL,EAEKS,MAAM,CAACI,OAFZ;AAGEZ,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKF,WAAW,CAACe,iBAAjB;AACE,+BACKd,YADL;AAEEC,QAAAA,OAAO,EAAE,KAFX;AAGEI,QAAAA,KAAK,EAAE,IAHT;AAIEC,QAAAA,QAAQ,EAAEG,MAAM,CAACI;AAJnB;;AAMF;AACE,aAAOL,KAAP;AApBJ;AAsBD,CAvBD;;AAyBA,eAAeD,WAAf","sourcesContent":["import { actionTypes } from './dataActions'\n\nconst initialState = {\n  loading: false,\n  enemyLips: [],\n  worldLips: [],\n  allOwnerLips: [],\n  error: false,\n  errorMsg: \"\"\n}\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.CHECK_DATA_REQUEST:\n      return {\n        ...initialState,\n        loading: true\n      }\n    case actionTypes.CHECK_DATA_SUCCESS:\n      return {\n        ...initialState,\n        ...action.payload,\n        loading: false\n      }\n    case actionTypes.CHECK_DATA_FAILED:\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport default dataReducer"]},"metadata":{},"sourceType":"module"}